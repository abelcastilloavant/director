% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/resource.R
\docType{data}
\name{directorResource}
\alias{directorResource}
\alias{directorResource-class}
\alias{directorResource_}
\title{R6 class representing a single director resource.}
\format{\preformatted{List of 8
 $ new       :function (...)  
 $ classname : chr "directorResource"
 $ public    :List of 15
  ..$ name                     : NULL
  ..$ initialize               :function (director, name, provided_environment = new.env(), defining_environment = parent.frame(), 
    helper = FALSE, tracking = TRUE, soft = FALSE)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 32 24 62 1 24 1 32 62
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11d208588> 
  ..$ value                    :function (..., recompile. = FALSE)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 81 13 86 5 13 5 81 86
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ compile                  :function (..., parse. = TRUE, tracking = TRUE)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 96 15 158 5 15 5 96 158
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ recompile                :function (...)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 159 17 162 5 17 5 159 162
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ evaluate                 :function (source_args, args = list())  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 195 16 221 5 16 5 195 221
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ parse                    :function (value, provides, args = list())  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 229 13 250 5 13 5 229 250
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ show                     :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 252 12 255 5 12 5 252 255
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ update_cache             :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 257 20 263 5 20 5 257 263
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ get_dependencies         :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 265 24 272 5 24 5 265 272
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ dependencies_modified    :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 275 29 284 5 29 5 275 284
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ any_dependencies_modified:function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 287 33 289 5 33 5 287 289
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ cache_value_if_necessary :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 291 32 303 5 32 5 291 303
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ caching_enabled          :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 305 23 307 5 23 5 305 307
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
  ..$ is_cached                :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 308 17 308 65 17 65 308 308
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11a16dd08> 
 $ private   :List of 17
  ..$ current             : NULL
  ..$ cached              : NULL
  ..$ modified            : logi FALSE
  ..$ source_args         : NULL
  ..$ filename            : NULL
  ..$ provided_environment: NULL
  ..$ director            : NULL
  ..$ defining_environment: NULL
  ..$ dependencies        : NULL
  ..$ compiled            : NULL
  ..$ .value              : NULL
  ..$ initialize_virtual  :function (name, defining_environment)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 80 21 97 1 21 1 80 97
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11d208588> 
  ..$ initialize_real     :function (provided_environment, helper, tracking, soft)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 171 20 177 1 20 1 171 177
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11d208588> 
  ..$ set_filename!       :function (helper)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 99 20 102 1 20 1 99 102
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11d208588> 
  ..$ set_details!        :function (soft)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 104 19 124 1 19 1 104 124
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11d208588> 
  ..$ set_modified!       :function (helper, tracking)  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 126 20 157 1 20 1 126 157
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11d208588> 
  ..$ mark_as_dependency! :function ()  
  .. ..- attr(*, "srcref")=Class 'srcref'  atomic [1:8] 159 26 169 1 26 1 159 169
  .. .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11d208588> 
 $ active    : NULL
 $ inherit   : NULL
 $ parent_env:<environment: namespace:director> 
 $ lock      : logi TRUE
 - attr(*, "class")= chr "R6ClassGenerator"
}}
\usage{
directorResource_
}
\description{
In director objects, resources are R scripts that can be processed into
other R objects. This is done through the use of
\code{\link[=register_preprocessor]{preprocessors}} and
\code{\link[=register_parser]{parsers}}.

Representation of a director resource.
}
\details{
A resource can be one of two types:

\enumerate{
   \item{Standalone. }{A simple R script with no dependencies. When
     using director methods, like \code{director_object$find}, the
     use of the ".R" extension is unnecessary and should be avoided.
     For example, if we have a script "load_db.R", we can verify
     our director sees it using \code{director_object$exists("load_db")}.}
   \item{Idempotent. }{An R script with helper files. Since R does not
     have a good dependency or namespacing system as in most OOP
     languages, it is easy to favor long procedural scripts that
     do not separate their components into modular pieces.

However, once an R script becomes too long (over 100 lines of
     code is a good heuristic), it should be broken up into helper
     files that are glued together in the master script. To facilitate
     this kind of modularity and "Don't Repeat Yourself"
     strategy, director provides the concept of an idempotent resource.

If an R script shares its name with its parent directory (for example,
     \code{"prep_data"} and \code{"prep_data/prep_data.R"}) it is called
     an \strong{idempotent resource}. All other files in that directory
     are called \strong{helper files} and will not be visible to the
     \code{director} object.

For example, imagine we have a directory \code{"prep_data"} with
     files \code{"prep_data.R"}, \code{"bad_variables.R"}, and
     \code{"numeric_variables.R"}. If we create a director object
     \code{d <- director$new(dir)}, where \code{dir} is the enclosing
     directory of \code{"prep_data"}, then calling \code{d$find("")}
     will list all the resources and display \code{c("prep_data")}. Notice
     that the name director uses to refer to an idempotent resource
     is the \emph{directory name}, not the filename.}
}
}
\keyword{datasets}

