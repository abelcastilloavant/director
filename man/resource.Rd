% Generated by roxygen2 (4.0.0): do not edit by hand
\name{resource}
\alias{resource}
\title{Fetch a resource relative to a director object.}
\usage{
resource(name, provides = list(), body = TRUE, soft = FALSE, ...,
  tracking = FALSE)
}
\arguments{
\item{name}{character. The name of the resource (i.e. R script) relative
to the root of the director object.}

\item{provides}{list or environment. A list or environment of values to provide
to the resource. The default is nothing, i.e., \code{list()}. Note that
\code{provides} will be coerced to an environment, and its parent
environment will be set to \code{parent.env(topenv())} to prevent
access to global variables (and encourage modularity and lack of side
effects. There should always be a way to write your code without them).}

\item{body}{logical. Whether or not the fetch the body of the resource
in the `current` and `cached` output lists.}

\item{soft}{logical. Whether or not to modify the cache to reflect
the resource modification time and other details.}

\item{...}{additional arguments to pass to the \code{base::source}
function that gets executed when the `value` is accessed.}

\item{tracking}{logical. Whether or not to perform modification tracking
by pushing accessed resources to the director's stack.}
}
\value{
a four-element list with names `current`, `cached`, `value`,
  and `modified`. The former two will both be two-element lists containing
  keys `info` and `body` (unless director has never executed the resource before
  in which case the latter will be \code{NULL}). The `info` key holds the
  result of calling R's built-in \code{file.info} on the resource (and includes
  information like created at and modified at time), whereas the `body`
  key holds a character representation of the body of the resource (useful
  for comparing if any actual modifications have been made).

  The `value` key in the returned list holds a function which will
  execute the given resource in the \code{provides} environment. A function
  is returned instead of the actual value to let the caller control
  whether or not the resource is executed (e.g., based on its properties
  in the `current` list). Most frequently, this means consulting the
  `modified` key of the returned list, which will hold a logical
  indicating whether or not the resource has been modified since last
  executed by the director (if this was never the case, `modified` will
  be \code{FALSE}).
}
\description{
Resources are R scripts that optionally have a "parser" attached
which takes the result of executing the file, including all of its local
variables, and does some additional computation. This is useful if,
for example, you are trying to define a standard format for creating a
reference class object by specifying some inputs, but want to make it
easy to provide those inputs by users.
}
\details{
This method will return a list containing four keys, `current`, `cached`,
`value`, and `modified` if it finds the given resource, or \code{FALSE}
if no such resource exists. The former two keys, `current` and `cached`,
will contain information relating to the current and previous execution
of this resource, while `value` contains a function that will execute the
file and return its output, and `modified` is a logical flag indicating
whether or not the file has been modified since it was last executed by
the director.
}

